temp= /home/mmariotti/temp
profiles_folder = /users/rg/mmariotti/selenoprofiles/trunk/profiles
bin_folder=  /users/rg/mmariotti/bin

r = selenoprofiles_results

profile=machinery,eukaryotic
save_chromosomes=1

genewise_to_be_sure = 1

output_ali=1
output_p2g=1

three_prime_length=6000
five_prime_length=10

blast_opt     = -a 7
exonerate_opt =
genewise_opt  =

blast_filtering_warning = True
exonerate_extension = 200000
genewise_extension  = 100
genewise_tbs_extension = 10000
species_library        = /users/rg/mmariotti/libraries/names.dmp
GO_obo_file            = /users/rg/mmariotti/libraries/gene_ontology_ext.obo

max_attempts_database  = 500
sleep_time             = 10
full_db                = 0

# setting defaults and keywords for profile attributes.    NEVER CHANGE BLAST OPTION -F F : psitblastn will crash

clustering_seqid.DEFAULT                  = 0.27
max_column_gaps.DEFAULT                   = 0.55
max_blast_hits.DEFAULT                    = 2500
max_blast_hits.STRICT                     = 100 

blast_options.DEFAULT       =    -b 5000 -F F 
exonerate_options.DEFAULT   =   
genewise_options.DEFAULT    =   

blast_options.SELENO        =   -b 5000 -F F 
exonerate_options.SELENO    =   -M /users/rg/mmariotti/libraries/BLOSUM62sel 
genewise_options.SELENO     =   -m /users/rg/mmariotti/libraries/wisecfg/BLOSUM62sel.bla -codon /users/rg/mmariotti/libraries/wisecfg/codon.table.sec

blast_filtering.DEFAULT     =     x.evalue < 1e-2  or x.sec_is_aligned()
p2g_filtering.DEFAULT       =     len(x.protein()) >60 or x.coverage()> 0.4
p2g_refiltering.DEFAULT     =     x.awsi_filter()

tags.DEFAULT                =    []
tag_db.DEFAULT              =    /users/rg/mmariotti/Databases/nr.fa
gi2go_db.DEFAULT            =    /users/rg/mmariotti/libraries/idmapping_GI_GO.tab
tag_blast_options.DEFAULT   =    -F "m S" -a 7 -f 999  -e 1e-10 -M BLOSUM80 -G 9 -E 2 
neutral_tags.DEFAULT        =    ["hypothet?ical","hypothet?ical conserved protein","PREDICTED","unnamed protein product","unknown","putative","(gi\|.*\| RIKEN cDNA .+ (gene)?(protein)? \[.+\].?)+$","(gi\|.*\| +([a-zA-Z0-9\-]+) \[Drosophila .+\].*)+","(gi\|.*\| +(AGAP[a-zA-Z0-9\-]+) \[Anopheles .+\].*)+","chromosome \w+ open reading frame \w+, isoform CRA","\wCG\d+(, isoform CRA_.+)? \[.+\]","(gi\|.*\| +SJ[a-zA-Z0-9\-]+ +(protein)? +\[Schistosoma japonicum].*)+","gi\|.*\| +MGC\d+ (protein )?\[Xenopus .+\]"]

# defining sets of families

families_set.bacterial = ahpd,ahpf,ars_s,arsc,bbd,cytc,dsre,duf1858,fesor,fmdb,frha,ftrb,gpx_b,grx,gst,hesb_like,imp,merp,mert,msra_b,mucd,nadh_ox,pp_sp1,prx,prx_like,rhor,rnfb,rnfc,rsam,seld,soret,tdip,ugc,ugsc,uos_hp3,usha,yeee,di_b,dsba,dsbg,fdha,frhd,frx,grda,grdb,hdra,prdb
families_set.eukaryotic =  SPS,DI,Fep15,FrnE,GPx,MsrA,Sel15,SelKi,SelH,SelI,SelJ,SelK,SelL,SelM,SelN,SelO,SelP,SelR,SelS,SelU,TR,SelT,SelW,AhpC
families_set.protists =    EhSEP2,Lmsel1,Sel1,Sel2,Sel3,Sel4,SelQ,SelTryp,MSP,Ostsp1,Ostsp2,Ostsp3
families_set.machinery  =  SPS,SBP2,SecS,eEFsec,pstk,secp43


families_set.all = machinery,eukaryotic,bacterial,protists

ACTION.pre_choose._improve1       =     if not opt['no_splice'] and x.prediction_program()=='blast':    x.remove_internal_introns(min_length=18)
ACTION.pre_choose._improve2       =     if not opt['no_splice']: x.clean_inframe_stop_codons(max_codons_removed=10)
ACTION.pre_choose._improve3       =     x.exclude_large_introns(max_intron_length=140000)
ACTION.post_filtering._improve4   =     if x.filtered == 'kept': x.complete_at_three_prime(max_extension=10, max_query_unaligned=30)
ACTION.post_filtering._improve5   =     if x.filtered == 'kept': x.complete_at_five_prime( max_extension=15, max_query_unaligned=30, full=False)
ACTION.post_filtering.secisearch  =     if x.filtered == 'kept' and x.profile.has_selenocysteine() and x.label in ['selenocysteine', 'unaligned', 'uga_containing', 'pseudo']:  Secisearch3(x) 
ACTION.post_filtering.bsecisearch  =     if x.filtered == 'kept' and x.profile.has_selenocysteine() and x.label in ['selenocysteine', 'uga_containing', 'pseudo']:  bSecisearch(x)
